// Variables escritas por el sistema de control difuso 
Angulo requerido = -180.000000              [grados]    // Es escrito. Indica la direccion requerida [grados]
W = 0                                                   // Es escrito. Indica el peso que se le da a la evasion del obstaculo y cual al cumplir cierto trayecto.
Desplazamiento = ADELANTE                               // Es escrito. Indica la dir. de desplazamiento. Posibles = [ADELANTE - FRENAR - DERECHA - IZQUIERDA - ATRAS] 
Pwm, Velocidad = 55 %                                   // Es escrito. Indica velocidad del robot 0-100% [%]

// Variables escritas por usrSpace_drive
Target = 0, 0                                           // Es escrito. Indica el lugar exacto (relativo al inicio) al que el usuario quiere que el robot vaya.
PosicionActual = 0, 0                                   // Es escrito. Indica la posicion actual del robot. Cuando este llegue al target PosicionActual = Target.

// Variables escritas por el sistema de procesamiento de imagenes
ImgProc, Direccion = NINGUNA                            // Es leido.   Indica la direccion preferente del proc de imagenes. Posibles = [DERECHA - IZQUIERDA - NINGUNA]
ImgProc, Tipo = DESCONOCIDO                             // Es leido.   Indica el tipo de objeto reconocido por el sistema de procesamiento de imagenes.

// Variables de estado actual del robot, escritas por drivers
Encoder, Rev = 0 - 0                        [rpm]       // Es leido.   Indica las revol. indicadas por ambos sensores de las ruedas traseras [cms] 
Encoder, Distancia = 0 - 0                  [cm]        // Es leido.   Indica la distancia recorrida [cms] 
Encoder, Distancia REAL = 0 - 0             [cm]        // Es leido.   Indica la distancia recorrida [cms] 
Brujula, Angulo = 0                         [grados]    // Es leido.   Indica angulo absoluto al Norte terrestre [grados]
Sensores, rightSensor = 1                   [cms]       // Es leido.   Indica distancia del sensor de la derecha al obstaculo mas cercano [cms]
Sensores, centerSensor = 1                  [cms]       // Es leido.   Indica distancia del sensor central al obstaculo mas cercano [cms]
Sensores, leftSensor = 1                    [cms]       // Es leido.   Indica distancia del sensor de la izquierda al obstaculo mas cercano [cms]

