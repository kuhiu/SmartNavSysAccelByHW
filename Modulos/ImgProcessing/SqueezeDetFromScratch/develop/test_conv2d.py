import numpy as np


def convolution2d(image, kernel):
    m, n = kernel.shape
    if (m == n):
        y, x = image.shape
        y = y - m + 1
        x = x - m + 1
        new_image = np.zeros((y,x))
        for i in range(y):
            for j in range(x):
                new_image[i][j] = np.sum(image[i:i+m, j:j+m]*kernel) 
    return new_image

def convolution2d2(image, kernel, stride, padding):
    image = np.pad(image, [(padding, padding), (padding, padding)], mode='constant', constant_values=0)

    kernel_height, kernel_width = kernel.shape
    padded_height, padded_width = image.shape

    output_height = (padded_height - kernel_height) // stride + 1
    output_width = (padded_width - kernel_width) // stride + 1

    new_image = np.zeros((output_height, output_width)).astype(np.float32)

    for y in range(0, output_height):
        for x in range(0, output_width):
            new_image[y][x] = np.sum(image[y * stride:y * stride + kernel_height, x * stride:x * stride + kernel_width] * kernel).astype(np.float32)
    return new_image
    
in_image =   [      [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],
                    [10, 20, 50, 50, 50, 10, 20, 50, 50, 50, 10, 20, 50, 50, 50],    ]

in_image2 =  [      [50, 20, 50, 20, 50, 20, 50, 20, 50, 20],
                    [50, 20, 50, 20, 50, 20, 50, 20, 50, 20],
                    [50, 20, 50, 20, 50, 20, 50, 20, 50, 20],
                    [50, 20, 50, 20, 50, 20, 50, 20, 50, 20],
                    [50, 20, 50, 20, 50, 20, 50, 20, 50, 20],
                    [50, 20, 50, 20, 50, 20, 50, 20, 50, 20],
                    [50, 20, 50, 20, 50, 20, 50, 20, 50, 20],
                    [50, 20, 50, 20, 50, 20, 50, 20, 50, 20],
                    [50, 20, 50, 20, 50, 20, 50, 20, 50, 20],
                    [50, 20, 50, 20, 50, 20, 50, 20, 50, 20]     ]

in_image3 =  [      [ 1, 3, 3, 3, 3, 3, 8,  1, 3, 3, 3, 3, 4 ],
                    [ 1, 3, 3, 3, 3, 3, 8,  1, 3, 3, 3, 3, 4 ],
                    [ 1, 3, 3, 3, 3, 3, 8,  1, 3, 3, 3, 3, 4 ],
                    [ 1, 3, 3, 3, 3, 3, 8,  1, 3, 3, 3, 3, 4 ],
                    [ 1, 3, 3, 3, 3, 3, 8,  1, 3, 3, 3, 3, 4 ],
                    [ 1, 3, 3, 3, 3, 3, 8,  1, 3, 3, 3, 3, 4 ],
                    [ 1, 3, 3, 3, 3, 3, 8,  1, 3, 3, 3, 3, 4 ],    ]

in_image4 =  [      [ 1, 1, 1, 1, 1, 1, 1 ],
                    [ 2, 2, 2, 2, 2, 2, 2 ],
                    [ 3, 3, 3, 3, 3, 3, 3 ],
                    [ 4, 4, 4, 4, 4, 4, 4 ],
                    [ 5, 5, 5, 5, 5, 5, 5 ],
                    [ 6, 6, 6, 6, 6, 6, 6 ],
                    [ 7, 7, 7, 7, 7, 7, 7 ],    ]

in_image5 =  [      [  1,  2, 3, 4, 5, 6, 7 ],
                    [  1,  2, 3, 4, 5, 6, 7 ],
                    [  1,  2, 3, 4, 5, 6, 7 ],
                    [  1,  2, 3, 4, 5, 6, 7 ],
                    [  1,  2, 3, 4, 5, 6, 7 ],
                    [  1,  2, 3, 4, 5, 6, 7 ],
                    [  1,  2, 3, 4, 5, 6, 7 ],    ]

in_filter =   [ [9, 2, 3],
                [1, 2, 5],
                [1, 2, 3]  ]

print (convolution2d2(np.array(in_image4), np.array(in_filter), 2, 0))